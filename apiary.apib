FORMAT: 1A
HOST: https://localhost:3000/

# kimoveis

KImoveis é uma API completa com CRUD de usuário/permissão de admin e CRUD de imoveis

##são 11 rotas no total, confira abaixo: 
(você pode navegar entre as rotas ao clicar sobre elas)

>###CRUD de usuario
- <a href="#usersPOST">```POST``` /users - Criação de usuário</a>

<br>
<br>
<br>
- <a href="#usersPOST">```GET``` /users - Lista todos os usuários</a>

<br>- Necessita do token de autenticação no cabeçalho
<br>- O usuário deve ser adm
<br>
<br>
<br>
- <a href=#usersPATCH-DELETE>```PATCH``` /users/:id - Atualiza um usuário</a>

<br>- Necessita do token de autenticação no cabeçalho
<br>- Se não for admin tem permissão para atualizar apenas seu usuário
<br>- Se for admin pode atualizar qualquer usuário
<br>- Você pode atualizar um ou mais campos sendo eles: name, email e password
<br>
<br>
<br>
- <a href=#usersPATCH-DELETE>```DELETE``` /users/:id - Realiza um soft delete no usuário</a>

<br>- Deve estar logado e ser um admin para deletar
<br>
<br>
<br>

>###Login
- <a href=#loginPOST>```POST``` /login - Gera o token de autenticação</a>

<br>- faça login com email e password de um usuário que existe
<br>
<br>
<br>

>###Criar e buscar categorias
- <a href=#categoriesPOST-GET>```POST``` /categories - Criação de categoria</a>

<br>- Rota para criação de categorias com os seguintes dados: name: string
<br>- Não podem ser cadastradas duas categorias com o mesmo nome.
<br>- A rota pode ser acessada apenas por administradores.
<br>
<br>
<br>
- <a href=#top>```GET``` /categories - Lista todas as categorias</a>

<br>
<br>
<br>
- <a href=#categoriesGET-properties>```GET``` /categories/:id/properties - Lista todos imóveis que pertencem a uma categoria</a>

<br>
<br>
<br>
>###Criar e listar propriedades
- <a href=#top>```POST``` /properties - Criação de um imóvel</a>

<br>- Não podem ser cadastrados dois imóveis com o mesmo endereço.
<br>- A rota pode ser acessada apenas por administradores.
<br>- Não podem ser cadastrados imóveis com o campo state maior que 2 dígitos.
<br>- Não podem ser cadastrados imóveis com o campo zipCode maior que 8 dígitos.
<br>
<br>
<br>
- <a href=#top>```GET``` /properties - Lista todos os imóveis</a>

<br>
<br>
<br>

>###Agendar e listar visitas a um imovel
- <a href=#top>```POST``` /schedules - Agenda uma visita a um imóvel</a>

<br>- Não é possível agendar uma visita a um imóvel com a mesma data e hora.
<br>- Só é possível agendar uma visita durante horário comercial (08:00 as 18:00).
<br>- Só é possível agendar uma visita durante em dias úteis (segunda à sexta).
<br>
<br>
<br>
- <a href=#top>```GET``` /schedules/properties/:id - lista todos os agendamentos de um imóvel</a>

<br>- a rota pode ser acessada apenas por administradores.
<br>
<br>
<br>

# Group CRUD de usuário
(clique sobre a rota para ver a requisição)
## -- [/users]


<a id="usersPOST">
### /users criação de usuário [POST]

+ Request (application/json)

        {
            "name": "Joana",
            "email": "joana@kenzie.com",
            "password": "123456",
            "isAdm": false
        }

+ Response 201 (application/json)

    + Body

            {
                "name": "Joana",
                "email": "joana@kenzie.com",
                "password": "123456",
                "id": "eefd83ca23d74b3b889038c578435911",
                "isAdm": false,
                "isActive": true,
                "createdAt": "2022-10-25T16:29:54.090Z",
                "updatedAt": "2022-10-25T16:29:54.090Z"
            }
            
            
### /users - Lista todos os usuários [GET]

+ Request (application/json)

    + Headers
        
            Authorization: "Bearer token"


+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "33a16a9a-ca7d-4e7f-ac54-13137f9cbf70",
                    "name": "victor",
                    "email": "victor@gmail.com",
                    "isAdm": true,
                    "isActive": true,
                    "createdAt": "2022-10-18T16:35:29.460Z",
                    "updatedAt": "2022-10-18T16:35:29.460Z"
                },
                {
                    "id": "eefd83ca-23d7-4b3b-8890-38c578435911",
                    "name": "Joana",
                    "email": "joana@kenzie.com",
                    "isAdm": false,
                    "isActive": true,
                    "createdAt": "2022-10-25T16:29:54.090Z",
                    "updatedAt": "2022-10-25T16:29:54.090Z"
                }
            ]

## -- [/users/:id]
<a id="usersPATCH-DELETE">
### /users/:id - Atualiza um usuário [PATCH]

+ Request (application/json)

    + Headers
        
            Authorization: Bearer token
    
    + body

            {
                "name": "teste",
                "email": "cauan@kenzie.com",
                "password": "123456"
            }

+ Response 200 (application/json)

    + body

            {
                "id": "a1cecb58-a948-4f23-974d-6f113560eac4",
                "name": "fabio",
                "email": "cauan@kenzie.com",
                "password": "$2b$10$uBySqv6f0YpYuT8IYjQcPukn3JL9OeKWfFgKcPuNqMrURyJJpVCyG",
                "isAdm": false,
                "isActive": true,
                "createdAt": "2022-10-25T16:51:37.587Z",
                "updatedAt": "2022-10-25T17:31:56.892Z"
            }
            
### /users/:id - Realiza um soft delete no usuário [DELETE]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer token

+ Response 204

# Group Login
(clique sobre a rota para ver a requisição)
## -- [/login]


<a id="loginPOST">
### /login - Gera o token de autenticação [POST]

+ Request

    + body

            {
                "password": "1234",
                "email": email@email.com
            }

+ Response 200 (application/json)

    + body

            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImM0YThmOGQ5LWRhMjYtNDk1MS1iYjFiLTA5OTM3NWUzM2MyNyIsImlzQWRtIjp0cnVlLCJpYXQiOjE2NjA3NjcyMjMsImV4cCI6MTY2MDc3MDgyM30.sF0RBjP0EbTmx408jK3VzwckTYUWrG0GgWnzfSVC7Hk"
            }

# Group Criar e buscar categorias
(clique sobre a rota para ver a requisição)
## -- [/categories]


<a id="categoriesPOST-GET">
### /categories - Criação de categoria [POST]

+ Request

    + Headers
    
            Authorization: Bearer token

    + body

            {
                "name": "Apartamento"
            }

+ Response 201 (application/json)

    + body

            {
                "name": "Apartamento",
                "id": "9cbc3f2e-a6c8-49de-8b49-b4c04940c1ec"
            }
            
### /categories - Lista todas as categorias [GET]

+ Response 200 (application/json)

    + body

            [
                {
                    "id": "4f25daa7-d330-49b6-976a-cbfab7224c92",
                    "name": "carros"
                },
                {
                    "id": "97fe79c9-9659-4a2c-8b84-4ec1841e71ae",
                    "name": "motos"
                },
                {
                    "id": "867e0076-170b-4184-9746-008c538bbfd8",
                    "name": "onibus"
                }
            ]

## -- [/categories/:id/properties]
<a id="categoriesGET-properties">
### /categories/:id/properties - Lista todos imóveis que pertencem a uma categoria [GET]

+ Response 200 (application/json)

    + body

            {
                "id": "fd703539-3516-42c8-8a32-173d8e1eecaf",
                "name": "Apartamento",
                "properties": [
                    {
                        "id": "67839bc7-07ea-4bb9-aad7-10ba6a206312",
                        "sold": false,
                        "value": 1000000,
                        "size": 350,
                        "createdAt": "2022-10-25T18:29:57.831Z",
                        "updatedAt": "2022-10-25T18:29:57.831Z",
                        "address": {
                            "id": "adfd9094-4e8c-410e-8143-4c26a316d8a5",
                            "district": "Rua Heleodo Pires de camargo",
                            "zipCode": "18150000",
                            "number": "67",
                            "city": "Piedade",
                            "state": "SP"
                        }
                    },
                    {
                        "id": "affc168f-5196-403e-972b-600ffa45601a",
                        "sold": false,
                        "value": 100000,
                        "size": 3502,
                        "createdAt": "2022-10-25T18:31:45.281Z",
                        "updatedAt": "2022-10-25T18:31:45.281Z",
                        "address": {
                            "id": "85a64963-f916-4b7a-80d2-ae26441ecaf4",
                            "district": "Rua da Lapa",
                            "zipCode": "18150023",
                            "number": "6",
                            "city": "Socorro",
                            "state": "MG"
                        }
                    }
            }